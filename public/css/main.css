/**********

  THIRD PARTY

***********/
/**********

  CUSTOM

***********/
*, *:before, *:after {
  box-sizing: border-box; }

@font-face {
  font-family: "Tahoma";
  font-weight: bold;
  font-style: normal;
  src: url("../fonts/Tahoma/Tahoma-Bold.eot");
  src: local("Tahoma"), url("../fonts/Tahoma/Tahoma-Bold.woff") format("woff"), url("../fonts/Tahoma/Tahoma-Bold.ttf") format("truetype"), url("../fonts/Tahoma/Tahoma-Bold.svg") format("svg"); }

@font-face {
  font-family: "Tahoma";
  font-weight: normal;
  font-style: normal;
  src: url("../fonts/Tahoma/Tahoma-Regular.eot");
  src: local("Tahoma"), url("../fonts/Tahoma/Tahoma-Regular.woff") format("woff"), url("../fonts/Tahoma/Tahoma-Regular.ttf") format("truetype"), url("../fonts/Tahoma/Tahoma-Regular.svg") format("svg"); }

@font-face {
  font-family: 'octicons';
  font-weight: normal;
  font-style: normal;
  src: url("octicons.eot");
  src: local("../fonts/octicons-local.ttf"), url("../fonts/octicons.woff") format("woff"), url("../fonts/octicons.ttf") format("truetype"), url("../fonts/octicons.svg") format("svg"); }

@keyframes wobble {
  from {
    transform: none; }
  15% {
    transform: translate3d(-25%, 0, 0) rotate3d(0, 0, 1, -5deg); }
  30% {
    transform: translate3d(20%, 0, 0) rotate3d(0, 0, 1, 3deg); }
  45% {
    transform: translate3d(-15%, 0, 0) rotate3d(0, 0, 1, -3deg); }
  60% {
    transform: translate3d(10%, 0, 0) rotate3d(0, 0, 1, 2deg); }
  75% {
    transform: translate3d(-5%, 0, 0) rotate3d(0, 0, 1, -1deg); }
  to {
    transform: none; } }

html, body {
  min-height: 100%;
  width: 100%; }

body {
  position: relative;
  font-family: "Tahoma", sans-serif;
  font-size: 16px;
  text-rendering: optimizeLegibility;
  -webkit-font-kerning: normal;
  font-kerning: normal;
  font-variant-ligatures: common-ligatures contextual;
  font-feauture-settings: "kern", "ling", "clig", "calt";
  line-height: 145%;
  font-size-adjust: 100%;
  word-break: break-word;
  -webkit-hyphens: auto;
  -ms-hyphens: auto;
  hyphens: auto;
  -webkit-hyphenate-before: 2;
  -webkit-hyphenate-after: 3;
  hyphenate-lines: 3;
  color: #1c1b1b;
  background-color: #e0e0e0; }
  body * {
    margin: 0;
    padding: 0;
    outline: 0;
    border: 0; }
    body *:active {
      outline: 0; }
    body *:focus {
      outline: 0; }

h1 {
  font-size: 1.25em; }

h2 {
  font-size: 1.125em;
  color: #9c9c9c; }

ul {
  list-style: none; }

a {
  border-radius: 5px;
  transition: color 0.5s;
  color: #1c1b1b; }
  a:hover, a:visited, a:active, a:focus {
    text-decoration: none; }
  a:hover {
    color: #e0e0e0;
    background-color: #6c4040; }
  a:visited {
    color: #1c1b1b; }
  a:active {
    color: #1c1b1b; }
  a:focus {
    color: #1c1b1b; }

.flexbox .navItem {
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-align: center;
  align-items: center; }

.visible-lg, .visible-md, .visible-sm, .visible-xs, .visible-xxs {
  display: none; }

@media (min-width: 1200px) {
  .visible-lg {
    display: block; } }

@media (min-width: 992px) and (max-width: 1199px) {
  .visible-md {
    display: block; } }

@media (min-width: 801px) and (max-width: 991px) {
  .visible-sm {
    display: block; } }

@media (max-width: 800px) {
  .visible-xs {
    display: block; } }

@media (max-width: 445px) {
  .visible-xss {
    display: block; } }

.title {
  font-size: 1.875em; }
  @media (max-width: 800px) {
    .title {
      text-align: center;
      font-size: 1.5em;
      padding: 0 20px; } }

.paragraph {
  font-size: 1.125em;
  padding-right: 20%; }
  @media (max-width: 800px) {
    .paragraph {
      width: 81.66667%;
      margin-left: auto;
      margin-right: auto;
      padding: 0;
      word-break: break-all; } }

.header {
  background-color: #185c47;
  min-height: 387px;
  position: relative;
  border-bottom: 2px solid #269170; }
  .header::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    margin: 0;
    background: url("../img/minecraft/grass.png") repeat center;
    background-size: 216px 175px;
    height: 175px; }

.brand {
  margin-left: auto !important;
  margin-right: auto !important;
  display: block !important;
  max-width: 324px;
  position: relative;
  top: 100px; }

.brand__name {
  background: url("../img/logo.png") center no-repeat;
  background-size: cover;
  padding-bottom: 42%; }

.navigaton {
  width: 98.33333%;
  margin-top: 15.50388%; }
  @media (max-width: 800px) {
    .navigaton {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      margin: 0;
      height: 44px;
      background-color: #9e3c9c; } }

.navigation__openMenuButton {
  position: absolute;
  top: 6px;
  left: 19px;
  background-color: transparent;
  color: #fff; }

.navList {
  width: 81.66667%;
  float: right;
  margin-left: 0.83333%;
  margin-right: 0.83333%;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-align: center;
  align-items: center; }
  @media (min-width: 801px) and (max-width: 991px) {
    .navList {
      font-size: 1.25em; } }
  @media (max-width: 800px) {
    .navList {
      display: none;
      position: fixed;
      top: 44px;
      left: 0;
      height: 100%;
      height: calc(100% - 44px);
      background-color: #1c1b1b;
      width: 100%;
      -ms-flex-direction: column;
      flex-direction: column;
      -ms-flex-align: space-between;
      align-items: space-between;
      z-index: 100;
      padding-top: 50%; } }

.navItem__refer {
  color: #e0e0e0;
  font-size: 1.25em;
  padding-bottom: 4%;
  position: relative; }
  .navItem__refer::after {
    content: "";
    height: 3px;
    background-color: #56cca6;
    margin-left: auto !important;
    margin-right: auto !important;
    display: block !important;
    position: absolute;
    left: 50%;
    bottom: -3px;
    width: 0;
    transition: width 0.5s, left 0.5s; }
  .navItem__refer:hover::after {
    width: 100%;
    left: 0; }
  .navItem__refer:visited {
    color: #e0e0e0; }
  .navItem__refer:hover {
    background-color: transparent; }
  .navItem__refer:active {
    color: #e0e0e0; }

.navItem__refer, .navItem__refer:hover {
  border-radius: 0; }

.navItem {
  width: 15%;
  display: inline-block;
  text-align: center; }
  @media (max-width: 800px) {
    .navItem {
      width: 100%; } }
  .navItem.active .navItem__refer {
    border-bottom: 3px solid #56cca6; }
    .navItem.active .navItem__refer::after {
      content: none; }

.navItem__refer {
  color: #e0e0e0;
  font-size: 1.25em;
  padding-bottom: 4%;
  position: relative; }
  .navItem__refer::after {
    content: "";
    height: 3px;
    background-color: #56cca6;
    margin-left: auto !important;
    margin-right: auto !important;
    display: block !important;
    position: absolute;
    left: 50%;
    bottom: -3px;
    width: 0;
    transition: width 0.5s, left 0.5s; }
  .navItem__refer:hover::after {
    width: 100%;
    left: 0; }
  .navItem__refer:visited {
    color: #e0e0e0; }
  .navItem__refer:hover {
    background-color: transparent; }
  .navItem__refer:active {
    color: #e0e0e0; }

.navItem__refer, .navItem__refer:hover {
  border-radius: 0; }

.copyright {
  padding-top: 20px; }
  @media (max-width: 800px) {
    .copyright {
      font-size: 0.8125em; } }
  @media (max-width: 445px) {
    .copyright {
      padding-top: 10px;
      font-size: 3vw; } }

#main {
  padding: 5% 0; }
  @media (max-width: 800px) {
    #main {
      padding: 15% 0; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
